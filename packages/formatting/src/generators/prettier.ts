/**
 * Prettier configuration generator
 */

import { stringify as stringifyYaml } from 'yaml';
import prettierConfigModule from '@outfitter/prettier-config';
import type { PresetConfig, GeneratedConfig } from '../types/index.js';
import type { Result } from '@outfitter/contracts';
import { success, failure, makeError } from '@outfitter/contracts';
import { mergeRawConfig, type YamlPreset } from '../utils/yaml-presets.js';

// Extract generator function with proper typing
const prettierModule = prettierConfigModule as any;

const generatePrettierConfig =
  prettierModule.generate ||
  (() => {
    throw new Error('Prettier config module does not have a generate function');
  });

/**
 * Generate Prettier configuration file
 */
export function generatePrettierConfigFile(
  preset: PresetConfig,
  yamlPreset?: YamlPreset,
): Result<GeneratedConfig, Error> {
  try {
    let config = generatePrettierConfig(preset);

    // Apply raw overrides from YAML preset if available
    if (yamlPreset?.raw?.prettier) {
      config = mergeRawConfig(config, yamlPreset.raw.prettier);
    }

    // Remove any functions from the config (CommonJS module issue)
    const cleanConfig = JSON.parse(JSON.stringify(config));

    // Generate as YAML for better comment support
    const yamlConfig = {
      ...cleanConfig,
      // Ensure proper formatting for YAML
      _preset: preset.name,
    };

    const header = `# Generated by @outfitter/formatting\n# Tool: prettier\n# Preset: ${preset.name}\n\n`;
    const content = header + stringifyYaml(yamlConfig);

    return success({
      path: '.prettierrc.yaml',
      content,
      formatter: 'prettier',
      generated: true,
    });
  } catch (error) {
    return failure(
      makeError('INTERNAL_ERROR', 'Failed to generate Prettier configuration', { cause: error }),
    );
  }
}

/**
 * Get Prettier-specific package.json scripts
 */
export function getPrettierScripts(): Record<string, string> {
  return {
    'format:prettier': 'prettier --write .',
    'format:prettier:check': 'prettier --check .',
  };
}
