/**
 * Biome configuration generator
 */

import * as biomeConfigModule from '@outfitter/biome-config';
import type { PresetConfig, GeneratedConfig } from '../types/index.js';
import type { Result } from '@outfitter/contracts';
import { success, failure, makeError } from '@outfitter/contracts';
import { mergeRawConfig, type YamlPreset } from '../utils/yaml-presets.js';

const generateBiomeConfig = biomeConfigModule.generate;

/**
 * Generate Biome configuration file
 */
export function generateBiomeConfigFile(
  preset: PresetConfig,
  yamlPreset?: YamlPreset,
): Result<GeneratedConfig, Error> {
  try {
    // Check if generateBiomeConfig is a function
    if (typeof generateBiomeConfig !== 'function') {
      return failure(
        makeError('INTERNAL_ERROR', 'generateBiomeConfig is not a function', {
          type: typeof generateBiomeConfig,
          value: generateBiomeConfig,
        }),
      );
    }

    // Map PresetConfig to BiomeConfigOptions
    const biomeOptions = {
      indentation: preset.indentation
        ? {
            style: preset.indentation.style,
            width: preset.indentation.width,
          }
        : undefined,
      lineWidth: preset.lineWidth,
      quotes: preset.quotes
        ? {
            style: preset.quotes.style,
            jsx: preset.quotes.jsx || preset.quotes.style,
          }
        : undefined,
      semicolons: preset.semicolons,
      trailingComma: preset.trailingComma,
      arrowParens: preset.arrowParens,
    };

    let config = generateBiomeConfig(biomeOptions);

    // Apply raw overrides from YAML preset if available
    if (yamlPreset?.raw?.biome) {
      config = mergeRawConfig(config, yamlPreset.raw.biome);
    }

    // Generate as JSONC for comment support
    const header = `// Generated by @outfitter/formatting\n// Tool: biome\n// Preset: ${preset.name}\n// Schema: https://biomejs.dev/schemas/1.9.4/schema.json\n`;
    const content = `${header}${JSON.stringify(config, null, 2)}\n`;

    return success({
      path: 'biome.jsonc',
      content,
      formatter: 'biome',
      generated: true,
    });
  } catch (error) {
    return failure(
      makeError('INTERNAL_ERROR', 'Failed to generate Biome configuration', { cause: error }),
    );
  }
}

/**
 * Get Biome-specific package.json scripts
 */
export function getBiomeScripts(): Record<string, string> {
  return {
    'format:biome': 'biome format --write .',
    'format:biome:check': 'biome format .',
    'lint:biome': 'biome lint .',
    'lint:biome:fix': 'biome lint --write .',
  };
}
